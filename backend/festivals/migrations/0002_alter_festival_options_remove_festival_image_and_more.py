# Generated by Django 5.2 on 2025-06-26 11:50

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('festivals', '0001_initial'),
        ('villages', '0002_remove_localsite_village_alter_village_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='festival',
            options={},
        ),
        migrations.RemoveField(
            model_name='festival',
            name='image',
        ),
        migrations.RemoveField(
            model_name='festival',
            name='is_featured',
        ),
        migrations.AddField(
            model_name='festival',
            name='added_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='festivals_added', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='festival',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='festival',
            name='is_annual',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='festival',
            name='main_activities',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='festival',
            name='main_ethnic_group',
            field=models.CharField(blank=True, max_length=64),
        ),
        migrations.AddField(
            model_name='festival',
            name='main_language',
            field=models.CharField(default='French', max_length=64),
        ),
        migrations.AddField(
            model_name='festival',
            name='traditional_foods',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='festival',
            name='type',
            field=models.CharField(choices=[('traditional', 'Traditional'), ('modern', 'Modern'), ('religious', 'Religious'), ('other', 'Other')], default='traditional', max_length=32),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='festival',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='festival',
            name='village',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='festivals', to='villages.village'),
        ),
        migrations.AddField(
            model_name='festival',
            name='website',
            field=models.URLField(blank=True),
        ),
        migrations.AlterField(
            model_name='festival',
            name='description',
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name='festival',
            name='end_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='festival',
            name='location',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='festival',
            name='name',
            field=models.CharField(max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='festival',
            name='start_date',
            field=models.DateField(),
        ),
        migrations.CreateModel(
            name='FestivalAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='pending', max_length=16)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booked_tutor_guide', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='booked_attendances', to=settings.AUTH_USER_MODEL)),
                ('festival', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='festivals.festival')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='festival_attendances', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'festival')},
            },
        ),
        migrations.CreateModel(
            name='FestivalComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('festival', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='festivals.festival')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FestivalFact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fact', models.CharField(max_length=255)),
                ('source', models.URLField(blank=True)),
                ('festival', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facts', to='festivals.festival')),
            ],
        ),
        migrations.CreateModel(
            name='FestivalFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_text', models.TextField(blank=True)),
                ('rating', models.PositiveSmallIntegerField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='festivals/feedback/images/')),
                ('video_url', models.URLField(blank=True)),
                ('experience', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attendance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='festivals.festivalattendance')),
            ],
        ),
        migrations.CreateModel(
            name='FestivalMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='festivals/images/')),
                ('video_url', models.URLField(blank=True)),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('festival', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='festivals.festival')),
            ],
        ),
        migrations.CreateModel(
            name='FestivalBookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('festival', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to='festivals.festival')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('festival', 'user')},
            },
        ),
    ]
